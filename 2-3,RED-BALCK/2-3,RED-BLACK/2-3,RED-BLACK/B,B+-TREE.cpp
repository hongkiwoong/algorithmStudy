

/*
	B트리 : 이진 탐색 트리에서 발전된 형태로 한 노드안에 여러 데이터를 담을 수 있다. 데이터들은 정렬된 형태로 저장되며 최대 n개의 데이터를 저장할 수 있다면
	        해당 노드의 자식은 최대 n+1 개의 자식을 가질 수 있다. 

			B 트리의 탐색은 BST 방법과 동일 그러나 BST보다 많은 수의 자식 노드를 가질 수 있기 때문에 더 빠르다. ( O(log n+1 n) )
			삭제시 해당 노드의 2/N (소수점일 경우 내림 적용) 갯수 보다 많아야 하기 때문에 해당 조건을 만족하지 못한다면 형제노드와 합쳐야 한다. 
	
	
	B+ 트리 : B트리와 다르게 B+ 트리는 리프노드에 모든 정보를 가지고 있다. 리프노드가 아닌 노드는 리프노드의 키값을 가지고 있다. 
	          리프 노드는 정렬된 형태로 저장되어 있으며 링크드리스트로 다음 노드의 위치를 가리키는 포인터가 존재한다. 

			  탐색, 삽입은 O(log n)으로 성능이 좋으며 삭제 시 B 트리와 동일하나 키값이 삭제되는 경우는 부모노드 혹은 조상 노드를 갱신해야 한다.


	B트리, B+트리는 모두 파일 시스템 및 데이터베이스에서 많이 사용하는 자료구조이다. 
	특히 B+ 트리는 리프노드에 링크드리스트로 저장되어 있어 순차적인 접근 ( 1->2->3 ... )을 해야 할 경우 매우 좋다.
*/